image:
  repository: ghcr.io/home-assistant/home-assistant
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podSecurityContext: {}

# NOTE: Setting high permissions to access full networking and resources.
securityContext:
  privileged: true
hostNetwork: true

service:
  type: ClusterIP
  port: 8123

timezone: &timezone Europe/Madrid

config:
  existingName: null
  values: null

secrets:
  # -- Secret to mount as secrets.yaml
  secretName: null

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Compatibility with hosts
  hostname: ""
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- Set list of hosts or bool (true)
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: "0.5"
    memory: 500Mi
  # limits:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}

persistence:
  enabled: true
  size: 2Gi
  existingClaim: null
  storageClass: ""
  annotations: {}
  accessModes:
    - ReadWriteOnce

mysql:
  install: true
  serviceAccount:
    create: false
  auth:
    database: homeassistant
    username: hass
    password: homeassistant
    rootPassword: homeassistant-root
  volumePermissions:
    enabled: true
  primary:
    extraEnvVars:
      - name: TZ
        value: *timezone
    persistence:
      enabled: true
      size: 4Gi
