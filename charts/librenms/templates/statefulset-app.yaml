apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "librenms.fullname" . }}
  labels:
    {{- include "librenms.app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.app.replicaCount }}
  serviceName: {{ include "librenms.fullname" . }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "librenms.app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.app.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/version: {{ .Values.image.tag | default .Chart.AppVersion | quote }}
        {{- include "librenms.app.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "librenms.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.app.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-env
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - sh
            - '-c'
            - >-
                export | cut -d' ' -f2 | tr -d "'"  > /data/.env
          envFrom:
            {{- include "librenms.environment_ref_default" . | nindent 12 }}
          env:
            {{- include "librenms.dispatcher_env" . | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
      {{- if .Values.nagios }}
        - name: nagios-plugins
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - sh
            - '-c'
            - apk add nagios-plugins-all
          volumeMounts:
            - name: nagios
              mountPath: /usr/lib/nagios
      {{- end }}
      {{- if .Values.smokeping.enabled }}
        - name: smokeping-prepare
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - sh
            - '-c'
            - run-parts {{ printf "/etc/periodic/%s/" .Values.smokeping.cron }}
          envFrom:
            {{- include "librenms.environment_ref_default" . | nindent 12 }}
          volumeMounts:
            # required access to LibreNMS DB config + librenms.log
            - name: data
              mountPath: /data
            - name: config-smokeping
              mountPath: /etc/smokeping/config.d
            - name: crontab-smokeping
              mountPath: {{ printf "/etc/periodic/%s/smokeping-cron" .Values.smokeping.cron }}
              subPath: smokeping-cron
      {{- if .Values.smokeping.auth.librenms }}
        - name: smokeping-auth
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - sh
            - '-c'
            - >-
                mysql -h ${DB_HOST} -u ${DB_USER} --password=${DB_PASSWORD} ${DB_NAME} -sN -e
                "SELECT CONCAT(username, ':', password) FROM users WHERE auth_type IN('mysql');" > /tmp/apache2/passwords
          envFrom:
            {{- include "librenms.environment_ref_default" . | nindent 12 }}
          volumeMounts:
            - name: auth-smokeping
              mountPath: /tmp/apache2
      {{- end }}
      {{- end }}
      containers:
        - name: app
          securityContext:
            {{- toYaml .Values.app.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            {{ include "librenms.environment_ref_default" . | nindent 12 }}
          lifecycle:
            {{- if .Values.applyPatchPR }}
            postStart:
              exec:
                command:
                  - sh
                  - '-c'
                  - >-
                      for PR_ID in {{ join " " .Values.applyPatchPR }}; do
                        ./scripts/github-apply ${PR_ID};
                      done
            {{- end }}
            preStop:
              exec:
                command:
                  - sh
                  - '-c'
                  - >-
                      s6-svscanctl -q /var/run/s6/services; killall -9 s6-supervise
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /login
              port: http
            periodSeconds: 15
            failureThreshold: 4
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /login
              port: http
            periodSeconds: 10
            failureThreshold: 4
          startupProbe:
            httpGet:
              path: /login
              port: http
            periodSeconds: 5
            failureThreshold: 120
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: rrd-journal
              mountPath: /var/lib/rrdcached/journal
            - name: config
              mountPath: /opt/librenms/config.d
            {{- if .Values.smokeping.enabled }}
            - name: config-smokeping
              mountPath: /etc/smokeping/config.d
            - name: crontab-smokeping
              mountPath: {{ printf "/etc/periodic/%s/smokeping-cron" .Values.smokeping.cron }}
              subPath: smokeping-cron
            {{- end }}
            - name: nagios
              mountPath: /usr/lib/nagios
        {{- if .Values.smokeping.enabled }}
        - name: smokeping
          securityContext:
            {{- toYaml .Values.app.securityContext | nindent 12 }}
          {{- with .Values.smokeping.image }}
          image: "{{ .repository }}:{{ .tag }}"
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          envFrom:
            {{ include "librenms.environment_ref_default" . | nindent 12 }}
          ports:
            - name: smokeping
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /server-status
              port: smokeping
            periodSeconds: 15
            failureThreshold: 4
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /server-status
              port: smokeping
            periodSeconds: 10
            failureThreshold: 4
          startupProbe:
            httpGet:
              path: /server-status
              port: smokeping
            periodSeconds: 5
            failureThreshold: 120
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
              subPath: rrd-smokeping
            - name: config-smokeping
              mountPath: /etc/smokeping/config.d
          {{- range tuple "Probes" "Targets" "Database" "General" }}
            - name: config-smokeping-override
              mountPath: /config/{{ . }}
              subPath: {{ . }}
          {{- end }}
            - name: config-smokeping-override
              mountPath: /config/site-confs/status_httpd.conf
              subPath: status_httpd.conf
          {{- if and (not .Values.smokeping.auth.guest) }}
            - name: config-smokeping-override
              mountPath: /config/site-confs/smokeping_httpd_auth.conf
              subPath: smokeping_httpd_auth.conf
            - name: auth-smokeping
              mountPath: /etc/apache2/passwords
              subPath: passwords
          {{- end }}
            - name: fping6
              mountPath: /usr/sbin/fping6
              subPath: fping6
        {{- end }}
        - name: rrdcached
          securityContext:
            {{- toYaml .Values.rrdcached.securityContext | nindent 12 }}
          image: {{ .Values.rrdcached.image.repository }}:{{ .Values.rrdcached.image.tag | default "latest" }}
          imagePullPolicy: {{ .Values.rrdcached.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "librenms.fullname" . }}-rrdcached
          ports:
            - name: rrd
              containerPort: 42217
              protocol: TCP
          livenessProbe: &rrd_tcpProbe
            tcpSocket:
              port: rrd
          readinessProbe: *rrd_tcpProbe
          resources:
            {{- toYaml .Values.rrdcached.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data/db
              subPath: rrd
          {{- if .Values.smokeping.enabled }}
            - name: data
              mountPath: /data/db/-smokeping
              subPath: rrd-smokeping
          {{- end }}
            - name: rrd-journal
              mountPath: /data/journal

      {{- with .Values.app.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "librenms.fullname" . }}-config
        {{- if .Values.smokeping.enabled }}
        - name: auth-smokeping
          emptyDir: {}
        - name: config-smokeping
          emptyDir: {}
        - name: config-smokeping-override
          configMap:
            name: {{ include "librenms.fullname" . }}-smokeping-config
        # fping6 wrapper does not exist, create it
        - name: fping6
          configMap:
            name: {{ include "librenms.fullname" . }}-smokeping-config
            defaultMode: 0755
            items:
              - key: fping6
                path: fping6
        - name: crontab-smokeping
          configMap:
            name: {{ include "librenms.fullname" . }}-smokeping-config
            defaultMode: 0755
        {{- end }}
        - name: rrd-journal
          emptyDir: {}
        - name: nagios
          emptyDir: {}
        {{- if and .Values.app.persistence.enabled .Values.app.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.app.persistence.existingClaim . }}
        {{- else if not .Values.app.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else if and .Values.app.persistence.enabled (not .Values.app.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{ include "librenms.app.labels" . | nindent 10 }}
        {{- if .Values.app.persistence.annotations }}
        annotations:
          {{- toYaml .Values.app.persistence.annotations | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- range .Values.app.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.app.persistence.size | quote }}
        storageClass: {{ .Values.app.persistence.storageClass }}
        {{- if .Values.app.persistence.selector }}
        selector:
          {{- toYaml .Values.app.persistence.selector | nindent 10 }}
        {{- end }}
  {{- end }}
