
nameOverride: ""
fullnameOverride: ""

imagePullSecrets: {}

ui:
  replicaCount: 1
  image:
    repository: frankescobar/allure-docker-service-ui
    tag: "7.0.3"
    digest: sha256:b06d1ee48be866d674bf2719df068e0402cee83553bc94bb05f06821bfdb5deb
    pullPolicy: IfNotPresent
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  service:
    type: ClusterIP
    port: 80

api:
  replicaCount: 1
  image:
    repository: frankescobar/allure-docker-service
    tag: "2.19.0"
    digest: sha256:849d7776ad0e8b45b2f963875d101520534b0c57885548b481cf4bd88c487e5f
    pullPolicy: IfNotPresent
  podAnnotations: {}
  # WARNING: Do not change fsGroup.
  # Group must be 1000 to use the shared Volume.
  podSecurityContext:
    fsGroup: 1000
  # WARNING: Do not change runAsUser & runAsGroup.
  # User & Group must be 1000 to use the shared Volume.
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
  resources: {}
  service:
    type: ClusterIP
    port: 80


# Keep Old Allure Results
keepHistory: true

# Number of Allure Reports to Keep
# Set to NONE to use Generate Reports Endpoint
updateFrequency: NONE

# Enables Admin & Viewer Login
securityEnabled: true

# Make Viewer Endpoints Public
publicViewerEndpoint: false

# Set Admin & Viewer Credentials on Security Enable
# apiVersion: v1
# kind: Secret
# metadata:
#     name: api-credentials
# type: Opaque
# data:
#   # echo -n 'my_username' | base64
#   SECURITY_USER: bXlfdXNlcm5hbWU=
#   # echo -n 'my_password' | base64
#   SECURITY_PASS: bXlfcGFzc3dvcmQ=
#   # echo -n 'view_user' | base64
#   SECURITY_VIEWER_USER: dmlld191c2Vy
#   # echo -n 'view_pass' | base64
#   SECURITY_VIEWER_PASS: dmlld19wYXNz
credentials: api-credentials

# Allure History and Reports Storage Resources
volume:
  enabled: true
  storageClassName: ""
  size: 4Gi
  existingClaim: ""
  accessModes:
    - ReadWriteMany

# For Large Allure Results:
# - Increase Connection Timeout
# - Increase Body Size
# - Diasble Modsecurity
ingress:
  enabled: false
  tls: false
  existingSecret: ""
  className: nginx
  # Allure UI needs a Public Allure API Hostname
  hostname: ""
  annotations: 
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
    # cert-manager.io/cluster-issuer: letsencrypt
    # nginx.ingress.kubernetes.io/enable-modsecurity: 'false'
    # nginx.ingress.kubernetes.io/proxy-connect-timeout: '900'
