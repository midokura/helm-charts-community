replicaCount: 1

extraLabels: {}
  # tags.datadoghq.com/service: static-page

image:
  repository: ""
  pullPolicy: Always
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Configures automatic image upgrades via flux image update
# This opens new PRs whenever a new docker image or helm chart is detected to update Flux definitions
updateAutomation:
  # -- Enable automation for Docker image versions
  # SemverRange is disabled as the chart enforces its own already
  docker:
    enabled: false
    filterTags: {}
    policy: {}
    #  semver:
    #    range:
  # -- Flux Repository resource reference to use to create a PR
  fluxRepository:
    # -- Reference to a GitRepository to where PRs with changes will be opened
    gitRepositoryRef: ""
    namespace: flux-system
    checkInterval: 10m
    path: ""


serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
