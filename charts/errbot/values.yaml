# Create as Deployment or StatefulSet
kind: StatefulSet

replicaCount: 1

# If false, Pod will run sleep.
# Useful for modifying data-storage settings
startErrbot: true

image:
  repository: errbotio/errbot
  tag: 6.1.9
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

automountServiceAccountToken: false

tty: false
stdin: false

updateStrategy: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 1000
  # fsGroupChangePolicy: OnRootMismatch

# Container Security Context
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true

service:
  type: ClusterIP
  port: 80
  containerPort: 3141

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

terminationGracePeriodSeconds: 15

# List of dict (repo) plugins to setup as GitHub Repositories
plugins: []
# - repo: errbotio/err-storage-redis

livenessProbe:
  enabled: false
  path: "/"
  command: ""
  initialDelaySeconds: 5
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3
  timeoutSeconds: 1

lifecycle: {}
  # preStop: {}
  # postStart: {}

# Defaults to image (/home/errbot)
workingDir: /opt/errbot

config:
  # Set any configuration before running Errbot
  storage: []
  #- name: core
  #  strategy: merge
  #  values:
  #    configs:
  #      Webserver:
  #        HOST: 0.0.0.0
  #        PORT: 3141

  # Configure Webserver plugin during initialization
  enableWebserver: true
  existingName: ""
  type: Secret
  path: /opt/errbot/config.py
  values: |
    import logging

    BACKEND = "Text"
    BOT_DATA_DIR = r"/opt/errbot/data"
    BOT_EXTRA_PLUGIN_DIR = r"/opt/errbot/plugins"
    BOT_LOG_FILE = r"/tmp/err.log"
    BOT_LOG_LEVEL = logging.INFO
    BOT_ADMINS = ("@CHANGE_ME",)

# Add env as key: value
env: {}

# Import Kubernetes config for extra environment resources
envFrom: []

persistence:
  enabled: true
  # initialize Errbot data content
  initialize: true
  path: /opt/errbot
  size: 1Gi
  existingClaim: ""
  storageClassName: ""
  accessModes:
  - ReadWriteOnce

# Allow to define extra containers to run
extraInitContainers: []
extraContainers: []

extraVolumes: []
extraVolumeMounts: []

# Sidecar container that pulls content from Git repository (eg. custom private plugins)
gitsync:
  enabled: false
  image:
    repository: gcr.io/k8s-staging-git-sync/git-sync
    tag: v3.6.9
    # digest: sha256:7ee16e73dcc87f26f431085ed055273f166bf1c6b51f658590c4727206704374
    digest: null
    pullPolicy: IfNotPresent
  env: {}
  envFrom: []
  resources: {}
  # use .Values.extraVolumes to define resources
  extraVolumeMounts: []
  config:
    # repo: https://github.com/kubernetes/git-sync
    root: /opt/errbot/git
    branch: main
    rev: HEAD
    wait: 60

redis:
  install: false
